" No Compatible{{{
set nocp
" }}}
" UTF-8 {{{
set ff=unix
set ffs=unix,dos
if !has('nvim')
    set encoding=utf-8
endif
set fenc=utf-8
set fencs=utf-8
" }}}
" Common Config {{{
filetype plugin indent on
syn on
set number
set mouse=a
set cursorline
set wildmenu
set showmatch
set incsearch
set hlsearch
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab
set backspace=indent,eol,start
set foldenable
set foldmethod=marker
let mapleader=","
set pastetoggle=<F2>
" }}}
" Navigation {{{
noremap <silent> <Leader><Space> :nohlsearch<CR>

noremap <silent> > :tabn<CR>
noremap <silent> < :tabp<CR>

map <silent> <Leader><Left>             <C-W><Left>
map <silent> <Leader><Right>            <C-W><Right>
map <silent> <Leader><Down>             <C-W><Down>
map <silent> <Leader><Up>               <C-W><Up>
" }}}
" Cindent {{{
set cino+=g0,t0,N-s,+0,i0
" }}}
" Backups {{{
set backup
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set backupskip=/tmp/*,/private/tmp/*
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set writebackup
"Â }}}
" File Types {{{
augroup filetypes
    au!
    au VimEnter * highlight clear SignColumn

    au FileType ruby setlocal tabstop=2
    au FileType ruby setlocal shiftwidth=2
    au FileType ruby setlocal softtabstop=2
    au FileType ruby setlocal commentstring=#\ %s

    au FileType ruby,eruby,html,haml,css,scss setl ts=2 sw=2 sts=2 et
    au BufEnter Makefile setlocal noexpandtab
augroup END
" }}}
" Vim-plug {{{
if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
                \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall | source $MYVIMRC
endif
" }}}
" Commands {{{
command! -bar PU PlugUpdate | PlugUpgrade
command! -bar NoTrail    :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s
command! -bar Indent     normal mzgg=G`z
command! -bar Fixup      :retab<Bar>:NoTrail<Bar>:Indent

nnoremap <F5>   :Fixup<CR>
inoremap <F5>   :Fixup<CR>
" }}}
" Plugins {{{
call plug#begin('~/.vim/plugged')
Plug 'vim-scripts/xoria256.vim'
Plug 'vim-airline/vim-airline'
Plug 'scrooloose/nerdtree'
Plug 'editorconfig/editorconfig-vim'
Plug 'justinmk/vim-syntax-extra'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'rking/ag.vim'
Plug 'craigemery/vim-autotag'
Plug 'majutsushi/tagbar'
Plug 'othree/html5.vim'
call plug#end()
" }}}
" NERDTree {{{
nnoremap <Space> za
noremap <silent> <Tab> :NERDTreeToggle<CR>
" }}}
" CtrlP  {{{
let g:ctrlp_match_window = 'bottom,order:ttb'
let g:ctrlp_switch_buffer = 0
let g:ctrlp_working_path_mode = 0
let g:ctrlp_match_window = 'results:50'
if executable('ag')
    let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'
    let g:ctrlp_use_caching=0
endif
nnoremap <silent> <C-S-P> :CtrlPTag<CR>
" }}}
" Tagbar {{{
nnoremap <silent> <F4> :TagbarToggle<CR>
let g:tagbar_map_togglefold = '<space>'
" }}}
" Ag {{{
if executable('ag')
    let grepprg = 'ag --nogroup --nocolor --hidden'
    nnoremap <Leader>a :Ag<Space>
    nnoremap K :Ag "\b<C-R><C-W>\b"<CR>:cw<CR>
else
    nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>g
endif
" }}}
" Airline {{{
set laststatus=2
set noshowmode
let g:airline_left_sep=''
let g:airline_right_sep=''
" }}}
" Xoria256 Colors {{{
set background=dark
silent! colo xoria256
"}}}
