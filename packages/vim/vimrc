" Vim-plug {{{
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall | source $MYVIMRC
endif
" }}}

" Plugin Helpers {{{
command! PU PlugUpdate | PlugUpgrade

function! DoRemote(arg)
  UpdateRemotePlugins
endfunction
" }}}

" Plugins {{{
call plug#begin('~/.vim/plugged')
Plug 'vim-scripts/xoria256.vim'
Plug 'vim-airline/vim-airline'
Plug 'scrooloose/nerdtree'
Plug 'editorconfig/editorconfig-vim'
Plug 'neomake/neomake'
if has('nvim')
  Plug 'Shougo/deoplete.nvim', { 'do': function('DoRemote') }
endif
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'
Plug 'justinmk/vim-syntax-extra'
call plug#end()
" }}}

" Config {{{
set nocompatible
set backspace=indent,eol,start
syn on
set number
set mouse=a
set tabstop=4
set shiftwidth=4
set expandtab
set foldmethod=marker
filetype plugin indent on

" Folds
vnoremap <Space> zf
nnoremap <silent> <Space> @=(foldlevel('.')?'za':"\<Space>")<CR>

map <Tab> :NERDTreeToggle<CR>
set background=dark
silent! colo xoria256
" }}}

" Airline {{{
let g:airline_powerline_fonts = 1
set laststatus=2
set noshowmode
set timeoutlen=10
" }}}

" Completion {{{
let g:deoplete#enable_at_startup = 1
" disable autocomplete
let g:deoplete#disable_auto_complete = 1
if has("gui_running")
    inoremap <silent><expr><C-Space> deoplete#mappings#manual_complete()
else
    inoremap <silent><expr><C-@> deoplete#mappings#manual_complete()
endif

" UltiSnips config
inoremap <silent><expr><TAB> pumvisible() ? "\<C-n>" : "\<TAB>"
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"
" }}}

