# {{{ Tmux
# If we're not inside tmux, then start tmux
if command -v tmux>/dev/null; then
    if [ -z $TMUX ] && [[ ! $TERM == screen* ]] && [[ ! $TERM == tmux* ]]; then
        exec tmux -2
    fi
fi
# }}}
# Xenv {{{
# We need to reload xenv
if command -v xenv >/dev/null 2>&1; then
    eval "$(xenv init - $SHELL)"
fi
# }}}
# User Namespace {{{
if command -v 'reattach-to-user-namespace' >/dev/null; then
    if [ -z "$REATTACH_TO_USER_NAMESPACE" ]; then
        export REATTACH_TO_USER_NAMESPACE=1
        exec reattach-to-user-namespace zsh
    fi
fi
# }}}
# Modules {{{
autoload -U colors && colors
autoload -U compinit && compinit -u
# }}}
# Dotfiles {{{
if [ -e "$HOME/.dotfiles/bin" ]; then
    export PATH="$HOME/.dotfiles/bin:$PATH"
fi
# }}}
# Options {{{
setopt APPEND_HISTORY
setopt AUTOCD
setopt AUTO_LIST
setopt EXTENDED_HISTORY
setopt GLOB_DOTS
setopt HASH_LIST_ALL
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_REDUCE_BLANKS
setopt INC_APPEND_HISTORY
setopt NULLGLOB
setopt PROMPT_SUBST
setopt PUSHD_SILENT
setopt SHARE_HISTORY
setopt RM_STAR_SILENT
setopt NO_BGNICE
setopt NO_BEEP
# }}}
# History {{{
HISTFILE="$HOME/.zsh_history"
HISTSIZE=10000
SAVEHIST=10000
# }}}
# Prompt {{{

if [ "$EUID" = 0 ]; then
    user_color="red"
else
    user_color="green"
fi

precmd() {
    vcs_segment=""
    git_branch=$(git rev-parse --abbrev-ref HEAD 2>/dev/null)
    if [ ! -z "$git_branch" ]; then
        vcs_segment="$git_branch"
        git_status=$(git status --porcelain)
        if [ ! -z "$git_status" ]; then
            vcs_segment="$vcs_segment*"
        fi
        vcs_segment=" %F{yellow}$vcs_segment"
    fi
}

PROMPT="%B%F{$user_color}%n%F{white}@%F{blue}%m %F{magenta}%5~\${vcs_segment}%F{white} %# %b%f%k"
RPROMPT="%(?..%B%F{white}%K{196} %? %b%f%k)"
ZLE_RPROMPT_INDENT=-1
# }}}
# Misc {{{
bindkey -v
find_variant() {
    for p in "$@"; do
        if command -v "$p" >/dev/null 2>&1; then
            echo $p
            return
        fi
    done
}

export CLICOLOR=1
export PAGER=$(find_variant most less more)
export VISUAL=$(find_variant nvim vim vi)
export EDITOR="$VISUAL"
# }}}
# Alias {{{
ls_default="ls"

if ls --color=auto &> /dev/null; then
    ls_default="$ls_default --color=auto"
    alias ls="$ls_default"
fi

alias l="$ls_default -la"
alias ll="$ls_default -l"

unset ls_default

# Git
alias g="git"
alias gs="git status"
alias gc="git commit"
alias gcm="git commit -m"
alias gb="git branch"
alias gr="git rebase"
alias gri="git rebase -i"
alias gco="git checkout"
alias gcb="git checkout -b"

if command -v brew >/dev/null 2>&1; then
    alias bupdate="brew update && brew upgrade && brew cleanup"
fi

if command -v vs_env >/dev/null 2>&1; then
    alias vs_env32="vs_env x86 "
    alias vs_env64="vs_env x64 "
fi

# ssh-tmux
function ssht {
    if [ -z "$1" ]; then
        echo "usage: ssht <host> [options]"
        return 1
    fi
    ssh $@ -t "if command -v tmux >/dev/null 2>&1; then exec tmux new-session; else echo 'Could not find tmux on remote.'; exit 1; fi"
    return $?
}

alias sudo="sudo "
alias env="env "
# }}}
