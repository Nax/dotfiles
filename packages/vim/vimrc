set nocp

set ff=unix
set ffs=unix,dos
if !has('nvim')
    set encoding=utf-8
endif
set fenc=utf-8
set fencs=utf-8

let g:python_host_skip_check = 1
let g:python3_host_skip_check = 1
let g:EditorConfig_core_mode = 'python_external'

let NERDTreeAutoDeleteBuffer = 1
let NERDTreeQuitOnOpen = 1
let NERDTreeCaseSensitiveSort = 1
let NERDTreeCascadeSingleChildDir = 0
let NERDTreeCascadeOpenSingleChildDir = 0

filetype plugin indent on
syn on
set lazyredraw
set number
set norelativenumber
set mouse=a
set cursorline
set wildmenu
set showmatch
set incsearch
set hlsearch
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab
set backspace=indent,eol,start
set foldenable
set foldmethod=marker
let mapleader=","
set pastetoggle=<F2>
set completeopt=longest,menuone

set cino+=g0,t0,N-s,+0,i0

noremap <C-c> <Esc>
noremap <silent> <Leader><Space> :nohlsearch<CR>

noremap <silent> > :tabn<CR>
noremap <silent> < :tabp<CR>

inoremap <C-Space> <C-X><C-U>
inoremap <C-@> <C-X><C-U>

fun! ToggleNumber()
    if &number
        set nonumber
        set relativenumber
    else
        set number
        set norelativenumber
    endif
endfun

fun! PushNumber()
    if &number
        let g:Number = 1
    else
        let g:Number = 0
        call ToggleNumber()
    endif
endfun

fun! PopNumber()
    if g:Number
        set number
        set norelativenumber
    else
        set nonumber
        set relativenumber
    endif
endfun

fun! NoTrail()
    let _nohlsearch=&hlsearch
    let _s=@/
    %s/\m\s\+$//e
    let @/=_s
    if !_nohlsearch
        set nohlsearch
    endif
endfun

command! -bar PU            :PlugUpdate<Bar>:PlugUpgrade
command! -bar NoTrail       :call NoTrail()
command! -bar Indent        normal mzgg=G`z
command! -bar Fixup         :retab<Bar>:NoTrail<Bar>:Indent
command! -bar ToggleNumber  :call ToggleNumber()

noremap  <F5>           :Fixup<CR>
noremap  <silent> <F3>  :ToggleNumber<CR>

augroup numbers
    au!
    au InsertEnter * call PushNumber()
    au InsertLeave * call PopNumber()
augroup END

set backup
set backupdir=~/.vim-tmp//,~/.tmp//,~/tmp//,/var/tmp//,/tmp//
set directory=~/.vim-tmp//,~/.tmp//,~/tmp//,/var/tmp//,/tmp//
set writebackup

augroup filetypes
    au!
    au VimEnter * highlight clear SignColumn
    au FileType ruby,eruby setl ts=2 sw=2 sts=2 et
    au FileType html,haml setl ts=2 sw=2 sts=2 et
    au FileType css,scss setl ts=2 sw=2 sts=2 et
    au FileType javascript,jsx,json setl ts=2 sw=2 sts=2 et
    au FileType yaml setl ts=2 sw=2 sts=2 et
    au BufEnter Makefile setlocal noexpandtab
augroup END

if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
                \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')
Plug 'airblade/vim-gitgutter'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'editorconfig/editorconfig-vim'
Plug 'honza/vim-snippets'
Plug 'jlanzarotta/bufexplorer'
Plug 'majutsushi/tagbar'
Plug 'mileszs/ack.vim'
Plug 'octref/rootignore'
Plug 'scrooloose/nerdtree', {'on': 'NERDTreeToggle'}
Plug 'sheerun/vim-polyglot'
Plug 'sirver/UltiSnips'
Plug 'szw/vim-tags'
Plug 'terryma/vim-multiple-cursors'
Plug 'tpope/vim-bundler'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'valloric/youcompleteme'
Plug 'vim-airline/vim-airline'
Plug 'vim-scripts/a.vim'
Plug 'vim-scripts/xoria256.vim'
call plug#end()

set updatetime=250

nnoremap <Space> za
noremap <silent> <C-g> :NERDTreeToggle<CR>
noremap <silent> <leader>. :edit .<CR>

let g:ctrlp_match_window = 'bottom,order:ttb'
let g:ctrlp_switch_buffer = 0
let g:ctrlp_working_path_mode = 0
let g:ctrlp_match_window = 'results:50'
if executable('ag')
    let g:ctrlp_use_caching = 0
    let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'
endif
nnoremap <silent> <C-S-P> :CtrlPTag<CR>

nnoremap <silent> <F4> :TagbarToggle<CR>
let g:tagbar_map_togglefold = '<space>'

nnoremap <Leader>a :Ack!<Space>

if executable('ag')
    let g:ackprg = 'ag --vimgrep'
endif

set laststatus=2
set noshowmode

set background=dark
silent! colo xoria256
